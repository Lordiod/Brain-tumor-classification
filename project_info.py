"""
Brain Tumor Classification Project Structure

This file provides an overview of the project structure and organization.
"""

PROJECT_STRUCTURE = """
brain-tumor-classification/
â”œâ”€â”€ README.md                          # Project documentation and setup guide
â”œâ”€â”€ LICENSE                            # MIT License file
â”œâ”€â”€ CHANGELOG.md                       # Version history and changes
â”œâ”€â”€ CONTRIBUTING.md                    # Guidelines for contributors
â”œâ”€â”€ .gitignore                        # Git ignore rules
â”œâ”€â”€ requirements.txt                   # Python dependencies
â”œâ”€â”€ config.py                         # Configuration settings
â”œâ”€â”€ setup.py                          # Automated setup script
â”œâ”€â”€ deploy.py                         # Production deployment script
â”œâ”€â”€ test_app.py                       # Unit tests
â”œâ”€â”€ Dockerfile                        # Docker container configuration
â”œâ”€â”€ docker-compose.yml               # Docker Compose setup
â”œâ”€â”€ 
â”œâ”€â”€ app.py                            # Main Flask web application
â”œâ”€â”€ mainTrain.py                      # Model training script
â”œâ”€â”€ mainTest.py                       # Model testing script
â”œâ”€â”€ BrainTumor.ipynb                 # Jupyter notebook for development
â”œâ”€â”€ 
â”œâ”€â”€ .github/                          # GitHub-specific files
â”‚   â””â”€â”€ workflows/
â”‚       â””â”€â”€ ci.yml                   # GitHub Actions CI/CD pipeline
â”œâ”€â”€ 
â”œâ”€â”€ models/                           # Pre-trained model files
â”‚   â”œâ”€â”€ BrainTumor10EpochsCategorical.h5
â”‚   â”œâ”€â”€ BrainTumor16EpochsCategorical.h5
â”‚   â””â”€â”€ BrainTumor50EpochsCategorical.h5
â”œâ”€â”€ 
â”œâ”€â”€ templates/                        # HTML templates
â”‚   â”œâ”€â”€ index.html                   # Main page template
â”‚   â””â”€â”€ import.html                  # Base template
â”œâ”€â”€ 
â”œâ”€â”€ static/                           # Static web assets
â”‚   â”œâ”€â”€ css/                         # Stylesheets
â”‚   â”‚   â”œâ”€â”€ bootstrap.min.css       # Bootstrap CSS
â”‚   â”‚   â”œâ”€â”€ test.css                # Custom styles
â”‚   â”‚   â””â”€â”€ ...                     # Other CSS files
â”‚   â””â”€â”€ js/                          # JavaScript files
â”‚       â”œâ”€â”€ jquery.min.js           # jQuery library
â”‚       â”œâ”€â”€ bootstrap.min.js        # Bootstrap JS
â”‚       â”œâ”€â”€ newjs.js                # Custom JavaScript
â”‚       â””â”€â”€ ...                     # Other JS files
â”œâ”€â”€ 
â”œâ”€â”€ dataset/                          # Training dataset (not in repo)
â”‚   â”œâ”€â”€ no/                          # Non-tumor images
â”‚   â”‚   â”œâ”€â”€ no0.jpg
â”‚   â”‚   â”œâ”€â”€ no1.jpg
â”‚   â”‚   â””â”€â”€ ...
â”‚   â””â”€â”€ yes/                         # Tumor images
â”‚       â”œâ”€â”€ yes0.jpg
â”‚       â”œâ”€â”€ yes1.jpg
â”‚       â””â”€â”€ ...
â”œâ”€â”€ 
â”œâ”€â”€ uploads/                          # User uploaded images
â”‚   â””â”€â”€ (dynamically created)
â”œâ”€â”€ 
â””â”€â”€ pred/                            # Prediction test images
    â”œâ”€â”€ pred0.jpg
    â”œâ”€â”€ pred1.jpg
    â””â”€â”€ ...
"""

# Core components and their purposes
COMPONENTS = {
    "Web Application": {
        "files": ["app.py", "templates/", "static/"],
        "description": "Flask web interface for image upload and tumor prediction"
    },
    "Machine Learning": {
        "files": ["models/", "mainTrain.py", "mainTest.py", "BrainTumor.ipynb"],
        "description": "CNN model training, testing, and pre-trained models"
    },
    "Configuration": {
        "files": ["config.py", "requirements.txt", ".gitignore"],
        "description": "Project configuration and dependency management"
    },
    "Documentation": {
        "files": ["README.md", "CONTRIBUTING.md", "CHANGELOG.md", "LICENSE"],
        "description": "Project documentation and guidelines"
    },
    "DevOps": {
        "files": ["Dockerfile", "docker-compose.yml", ".github/workflows/", "deploy.py"],
        "description": "Deployment, containerization, and CI/CD pipeline"
    },
    "Testing": {
        "files": ["test_app.py", "setup.py"],
        "description": "Unit tests and automated setup scripts"
    }
}

def print_structure():
    """Print the project structure"""
    print("ðŸ§  Brain Tumor Classification - Project Structure")
    print("=" * 60)
    print(PROJECT_STRUCTURE)
    
    print("\nðŸ“¦ Core Components:")
    print("-" * 30)
    for component, info in COMPONENTS.items():
        print(f"\n{component}:")
        print(f"  Files: {', '.join(info['files'])}")
        print(f"  Purpose: {info['description']}")

if __name__ == "__main__":
    print_structure()
